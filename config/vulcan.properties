#Vulcan configuration
AutomatedTestType    = Functional/Cross-Browser/Performance
FrameworkType        = Selenium-WAF/UFT
VersionControl       = GitHub/SVN
GitHubRepositoryURL  = 
DependencyManager    = Maven/Gradle
TestSuiteOptions     = Java
ProfileOptions       = Custom Profile
MavenOptions         = -PRunWAFTests -DEnvironment=https://url
			         = Dtesting.suite.file=name of xml file
			         = Ddriver.name=chromeRemoteDriver - Dvm.count =10
JavaListeners        = 
RunType              = Grid multiple executor
Run                  = Once
TestExecutionName    = Regression
JobOwnersToBeNotified= Email address

#to get the java home
 /usr/libexec/java_home
 mvn -version

#Connect new project to Github:
1=Open cmd from the project.
2=git config --global user.email "emailaddress"
3=git config --global user.name "username"
4=git init - initialize the project
5=git remote add origin url of the github repository
6=git add. 
7=git commit -m"message"
8=git push origin master
9=git branch --set-upstream-to=origin/master master
10=git pull
#Switch branch
11=git fetch
12=git checkout branchname

#Jenkins configuration
1=Download Generic Java package(.war)
2=Java -jar jenkins.war -httpPort=8080 in cmd prompt from jenkins war file location
3=Manage Jenkins ->Global Tool Configuration -> configure JDK and Maven(pass name and path) ->Save
4=Create a new job
5=Project name ->Advanced ->Use custom workspace ->Directory -$(JENKINS_HOME)/projectname /Alternative-SCM
6=Copy the project under .jenkins folder 
7=Source Code Management ->Git(url of github repository
8=MINUTES(0-59),HOURS(0-23),DAYMONTH(1-31),MONTH(1-12),DAYWEEK(0-7) to run job periodically
9=Build Triggers ->Build periodically ->Schedule
10=Build ->Invoke top-level Maven targets ->Maven Version and Goals -mvn test or mvn test -PRegression
11=Install TestNG Results Plugin
12=Post-build Actions ->Publish TestNG Results ->TestNG XML report pattern -**/testng-results.xml
